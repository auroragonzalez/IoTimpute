runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
invalidas[0]
invalidas[1]
length(invalidas)
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
shiny::runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
shiny::runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
shiny::runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
shiny::runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
?length
length(NULL)
h = length(NULL)
h
h+1
h=h+1
runApp('Escritorio/Primafrio/Shiny ultima')
shiny::runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
shiny::runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
shiny::runApp('Escritorio/Primafrio/Shiny ultima')
runApp()
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
install.packages("shinyjs")
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
shiny::runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
library(shinyjs)
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Ultima tomas')
runApp('Escritorio/Primafrio/Ultima tomas')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio')
runApp('Escritorio/Primafrio/Shiny ultima')
shiny::runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
library(shinyjs)
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp()
runApp('Escritorio/Primafrio/Shiny ultima')
runApp()
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Shiny App/IC50')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
View(rto)
summary(rto)
resume(rto)
resumme(rto)
sapply(rto, class)
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
runApp('Escritorio/Primafrio/Shiny ultima')
?hide
??hide
# Chunk 1: setup
# Primafrio
require(gdata)
require(dplyr)
require(data.table)
require(shinyjs)
# Informe Conronavirus
# Fernando Villalba
#####################################
# cargo las librer√≠as
library(flexdashboard)
library(ggplot2)
library(DT)
library(lubridate)
library(xts)
library(dygraphs)
#library(plotly)
library(leaflet)
#library(dplyr)
library(data.table)
# lectura de los datos
library (readr)
# Auro 07/05/2020 (start)
downloadButtonRmd <- function (outputId, label = "Download", class = NULL, ...)  {
tags$a(id = outputId, class = paste("btn btn-default shiny-download-link",
class), href = "", target = "_blank", download = NA,
icon("download"), label, ...)
}
# Auro 07/05/2020 (end)
# Chunk 2
#selectInput('valor', 'Selecciona un valor', unique(datosvalores$df.control$ticker) ,multiple=F)
dateRangeInput(inputId = "Date",label = "Selecciona las fechas",
start = "2018-01-02",
min = "2018-01-02",
end = "2018-01-03",
max = "2018-12-31" )
uiOutput("select")
# Jose 08/05/2020 (start)
h5("Descargar fichero log:")
downloadButtonRmd("downFile", label = "Download")
# DESACTIVAR BOTON!!!!!!!!!!
# Jose 08/05/2020 (end)
# Chunk 3
selectedData2 <- reactive({
data = dir("2018/")
F1 = input$Date[1]
F2 = input$Date[2]
Fechas <- seq(F1,F2, by = "days")
CSV <- vector()
for (i in 1:length(Fechas)) {
CSV[i] <- paste(substr(gsub("-","",Fechas[i]),3,8),".csv",sep = "")
}
index <- data[data %in% CSV]
})
output$tabla2 <- renderTable({selectedData2()})
aggData <- reactive({
data = dir("2018/")
df = list()
codigos = read.xls("Codigos.xlsx", skip = 1, sheet = 1, header = F)
for (i in 1:length(selectedData2())) {
path = paste("2018/", selectedData2()[i],sep = "")
df[[i]] = fread(path,skip = 3,sep =";",encoding = 'Latin-1')
df[[i]]$Mercancia <- toupper(df[[i]]$Mercancia)
df[[i]] = merge(df[[i]], codigos, by.x ="Mercancia", by.y = "V1") %>%
select(c(V2,FechaCargaDesde,FechaEntregaDesde))
}
DF <- bind_rows(df)
df2 <-aggregate(DF$V2, by=list(DF$FechaCargaDesde, DF$FechaEntregaDesde), FUN=table)
df2$x[df2$x!=0] = 1
conteo <- data.frame(colSums(df2$x))
conteo <- cbind(newColName = rownames(conteo), conteo)
rownames(conteo) <- NULL
colnames(conteo) <- c("producto","freq")
aggdata <- conteo[order(conteo$freq, decreasing = T),]
aggdata[aggdata$freq >0,]
})
output$tabla <- renderTable({aggData()})
#shinycssloaders::withSpinner(tableOutput(outputId = "tabla"),color="#0dc5c1")
#tableOutput(outputId = "tabla")
shinycssloaders::withSpinner(tableOutput(outputId = "tabla"))
# Chunk 4
# Jose 07/05/2020 (start)
listaMatriculas <- reactive({
lista <- vector()
for (i in 1:length(selectedData2())) {
path = paste("2018/", selectedData2()[i], sep = "")
df <- fread(path, skip = 3, sep =";", encoding = 'Latin-1')
lista <- append(lista, df$MatriculaEntrega)
}
todas <- unique(sort(lista))
index <- grepl(pattern = '(^[A-Z]{1,2}-[0-9]{2,6}(-[A-Z]{1,3})?$)|(^[0-9]SU[0-9]{4}$)|(^EW[A-Z][0-9]([A-Z]|[0-9])[A-Z]([A-Z]|[0-9])$)|(^W[0-9]{4}[A-Z]{2}$)|(^[A-Z]{2}[0-9]{4}[A-Z]$)|(^[A-Z]{3}[0-9]{4}[A-Z]$)|(^WS[A-Z]-?([A-Z]|[0-9]){2}-?([A-Z]|[0-9]){2}$)', todas)
validas <- todas[index]
return(validas)
})
output$select <- renderUI({
selectInput(inputId = "select", label = "Selecciona el viaje", choices = append("Todos", listaMatriculas()),
selected = 0, multiple = FALSE)
})
tablaDuraciones <- reactiveVal(NULL)
duracionViajes <- reactive({
logFile <- file("log.txt")
sink(logFile)
sink(logFile, type = "message")
infoViajes <- data.frame(NULL, stringsAsFactors = FALSE)
totalErr = 0
totalWarnings = 0
for (i in 1:length(selectedData2())) {
path = paste("2018/", selectedData2()[i], sep = "")
df <- fread(path, skip = 3, sep =";", encoding = 'Latin-1')
errores = 0
warnings = 0
if(input$select == "Todos") {
matriculas <- unique(sort(df$MatriculaEntrega[df$MatriculaEntrega != ""]))
index <- grepl(pattern = '(^[A-Z]{1,2}-[0-9]{2,6}(-[A-Z]{1,3})?$)|(^[0-9]SU[0-9]{4}$)|(^EW[A-Z][0-9]([A-Z]|[0-9])[A-Z]([A-Z]|[0-9])$)|(^W[0-9]{4}[A-Z]{2}$)|(^[A-Z]{2}[0-9]{4}[A-Z]$)|(^[A-Z]{3}[0-9]{4}[A-Z]$)|(^WS[A-Z]-?([A-Z]|[0-9]){2}-?([A-Z]|[0-9]){2}$)', matriculas)
invalidas <- matriculas[!index]
matriculas <- matriculas[index]
if(length(invalidas) > 0){
message(paste0("~~~~~~~~~~~~~~~~~"))
message(paste0("Fichero ", strsplit(selectedData2()[i], ".", fixed=TRUE)[[1]][1]))
message(paste0("~~~~~~~~~~~~~~~~~"))
aux = ""
for (k in 1:length(invalidas)) {
if(aux == "") aux = paste(aux, invalidas[k], sep = "")
else aux = paste(aux, ", ", invalidas[k], sep = "")
}
message(paste0("Warning: ", length(invalidas), " matr√≠cula/s incorrecta/s: ",  aux))
warnings = warnings + length(invalidas)
}
} else matriculas = input$select
for (j in 1:length(matriculas)) {
df1 <- df[df$MatriculaEntrega == matriculas[j], c('FechaCargaDesde', 'FechaEntregaDesde')]
if(nrow(df1) > 0){
duracion = as.numeric(difftime(max(strptime(df1$FechaEntregaDesde, format = '%d/%m/%Y %H:%M')),
min(strptime(df1$FechaCargaDesde, format = '%d/%m/%Y %H:%M')), units = 'hour'))
if(duracion > 0)
infoViajes <- rbind(infoViajes, c(matriculas[j], format(strptime(strsplit(selectedData2()[i], ".", fixed=TRUE)[[1]][1], format = '%y%m%d'), "%d/%m/%Y"), duracion), stringsAsFactors = FALSE)
else {
if(warnings == 0){
message(paste0("~~~~~~~~~~~~~~~~~"))
message(paste0("Fichero ", strsplit(selectedData2()[i], ".", fixed=TRUE)[[1]][1]))
message(paste0("~~~~~~~~~~~~~~~~~"))
}
message(paste0("Error: Tiempo de viaje negativo: fechaCarga < fechaEntrega para matr√≠cula: ", matriculas[j]))
errores = errores+1
}
}
}
if(errores == 0 & warnings == 0 & input$select == "Todos" & length(df$MatriculaEntrega[df$MatriculaEntrega == ""] > 0)){
message(paste0("~~~~~~~~~~~~~~~~~"))
message(paste0("Fichero ", strsplit(selectedData2()[i], ".", fixed=TRUE)[[1]][1]))
message(paste0("~~~~~~~~~~~~~~~~~"))
}
if(input$select == "Todos") errores = errores + length(df$MatriculaEntrega[df$MatriculaEntrega == ""])
if(errores > 0 | warnings > 0){
if(length(df$MatriculaEntrega[df$MatriculaEntrega == ""] > 0) & input$select == "Todos")
message(paste0("Error: ", length(df$MatriculaEntrega[df$MatriculaEntrega == ""]), " matr√≠culas vac√≠as."))
message(paste0("Total: ", errores + warnings, " viajes descartados."))
# ACTIVAR BOTON!!!!!!!!!!
}
totalErr = totalErr + errores
totalWarnings = totalWarnings + warnings
}
closeAllConnections()
if(totalErr > 0 & totalWarnings > 0)
showNotification(paste("En la limpieza de datos se han generado ", totalErr, " errores y ", totalWarnings, " warnings. Para verlos desc√°rguese el fichero log.txt.", sep = ""), duration = 5, closeButton = TRUE, type = "warning")
else if(totalErr > 0)
showNotification(paste("En la limpieza de datos se han generado ", totalErr, " errores. Para verlos desc√°rguese el fichero log.txt.", sep = ""), duration = 5, closeButton = TRUE, type = "warning")
else if(totalWarnings > 0)
showNotification(paste("En la limpieza de datos se han generado ", totalWarnings, " warnings. Para verlos desc√°rguese el fichero log.txt.", sep = ""), duration = 5, closeButton = TRUE, type = "warning")
else{
# DESACTIVAR BOTON!!!!!!!!!!
}
if(nrow(infoViajes) > 0)
names(infoViajes) <- c("Matr√≠cula", "Fecha", "Duraci√≥n (horas)")
tablaDuraciones(infoViajes)
return(infoViajes)
})
output$tablaDuracionViajes <- renderTable({duracionViajes()}, spacing = 'm', bordered = TRUE, align = 'c', width = "auto", na = "NA")
output$downFile <- downloadHandler(
filename = function() {
paste0(input$downFile, "log.txt")
},
content = function(file) {
directory = getwd()
name = paste0(directory,"/log.txt")
contenido <- readLines(name)
writeLines(contenido, file)
}
)
output$estadisticos <- renderTable({
input$select
input$Date
rto <- tablaDuraciones()
if (input$select == "Todos" & !is.null(rto)){
resumen <- matrix(0, nrow = 1, ncol = 5)
colnames(resumen) <- c("Media", "Mediana", "Desviaci√≥n t√≠pica", "M√≠nimo", "M√°ximo")
resumen[1,1] <- mean(as.numeric(rto[,3]))
resumen[1,2] <- median(as.numeric(rto[,3]))
resumen[1,3] <- sd(as.numeric(rto[,3]))
resumen[1,4] <- min(as.numeric(rto[,3]))
resumen[1,5] <- max(as.numeric(rto[,3]))
return (resumen)
}
}, digits = 2, spacing = 'm', bordered = TRUE, align = 'c', width = "auto", na = "NA")
output$grafica <- renderPlot({
input$select
input$Date
rto <- tablaDuraciones()
if (input$select == "Todos" & !is.null(rto)){
rto[,3] <- as.numeric(rto[,3])
names(rto) <- c("Matricula", "Fecha", "Duracion")
boxplot(Duracion~Fecha, data = rto, main = "Diferentes boxplots por cada d√≠a", xlab = "Fecha", ylab = "Duraci√≥n", border = "black")
}
})
tableOutput(outputId = "tablaDuracionViajes")
tableOutput(outputId = 'estadisticos')
plotOutput(outputId = "grafica")
# Jose 07/05/2020 (end)
shiny::runApp('Escritorio/Shiny App/IC50')
runApp('~/Escritorio/Shiny App/IC50')
runApp('Escritorio/Shiny App/IC50')
runApp('Escritorio/Shiny App/IC50')
runApp('Escritorio/Shiny App/IC50')
shiny::runApp('Escritorio/Shiny App/IC50')
shiny::runApp('Escritorio/Shiny App/IC50')
runApp('Escritorio/Shiny App/IC50')
runApp('Escritorio/Shiny App/IC50')
runApp('Escritorio/Shiny App/IC50')
runApp('Escritorio/Shiny App/IC50')
runApp('Escritorio/Shiny App/IC50')
runApp('Escritorio/Shiny App/IC50')
runApp('Escritorio/Shiny App/IC50')
runApp('Escritorio/Shiny App/IC50')
shiny::runApp('Escritorio/Shiny App/IC50')
runApp('Escritorio/Shiny App/IC50')
runApp('Escritorio/Shiny App/IC50')
runApp('Escritorio/Shiny App/IC50')
runApp('Escritorio/Shiny App/IC50')
shiny::runApp('Escritorio/Shiny App/IC50')
runApp('Escritorio/Shiny App/IC50')
runApp('Escritorio/Shiny App/IC50')
runApp('Escritorio/Shiny App/IC50')
runApp('Escritorio/Shiny App/IC50')
runApp('~/Escritorio/Shiny App/IC50')
runApp('Escritorio/Shiny App/IC50')
demo()
shiny::runApp('Escritorio/Shiny App/IC50')
runApp('~/Escritorio/Shiny App/IC50')
devtools::install_github('rstudio/markdown')
library(rmarkdown)
pandoc_version()
devtools::install_github('rstudio/markdown')
install_github('rstudio/markdown')
install('rstudio/markdown')
devtools::install_github('rstudio/rmarkdown')
install.packages("devtools")
devtools::install_github('rstudio/rmarkdown')
pandoc_version()
devtools::install_github(c('yihui/knitr', 'rstudio/flexdashboard'))
Sys.getenv('RSTUDIO_PANDOC')
devtools::install_github('rstudio/rmarkdown')
devtools::install_github('rstudio/rmarkdown', force = TRUE)
update.packages(ask = FALSE, repos = 'http://cran.rstudio.org')
install.packages('knitr', repos = c('http://rforge.net', 'http://cran.rstudio.org'),
type = 'source')
install.packages("knitr", repos = c("http://rforge.net", "http://cran.rstudio.org"), type = "source")
cadena <- "Hola\nEres un crack \n\n PEro eesto no funsiona jeje"
write.table(cadena, file = "prueba.txt")
cadena <- "Hola\nEres un crack \n\n PEro eesto no funsiona jeje"
write.table(cadena, file = "prueba.txt", sep ="", row.names = FALSE, col.names = FALSE)
class(cadena)
print(cadena)
cadena <- "Hola\nEres un crack \n\n PEro eesto no funsiona jeje"
write.table(cadena, file = "prueba.txt", sep ="", row.names = FALSE, col.names = FALSE, quote = FALSE)
shiny::runApp('Escritorio/Shiny App/IC50')
runApp('Escritorio/Shiny App/IC50')
runApp('Escritorio/Shiny App/IC50')
shiny::runApp('Escritorio/Shiny App/IC50')
runApp('~/Escritorio/Shiny App/IC50')
runApp('Escritorio/Shiny App/IC50')
runApp('Escritorio/Shiny App/IC50')
runApp('Escritorio/Shiny App/IC50')
runApp('Escritorio/Shiny App/IC50')
runApp('Escritorio/Shiny App/IC50')
runApp('Escritorio/Shiny App/IC50')
runApp('Escritorio/Shiny App/IC50')
runApp('Escritorio/Shiny App/IC50')
runApp('Escritorio/Shiny App/IC50')
shiny::runApp('Escritorio/shiny app/IC50')
getwd()
runApp('Escritorio/shiny app/IC50')
runApp('Escritorio/shiny app/IC50')
runApp('Escritorio/shiny app/IC50')
runApp('Escritorio/shiny app/IC50')
pwd
getwd()
setwd("~/Escritorio/shiny app/IC50")
read.csv("/srv/shiny-server/impBME/code/tmp/Rgt.csv")
read.csv("locationsIBRL.txt")
ls()
setwd("~/Escritorio/shiny app/IC50/data/IBRL/")
read.csv("locationsIBRL.txt")
read.csv("locationsIBRL.txt", header = TRUE, dec = ".", sep = "\t")
loc <- read.csv("locationsIBRL.txt", header = TRUE, dec = ".", sep = "\t")
loc <- read.csv("locationsIBRL.txt", header = FALSE, dec = ".", sep = "\t")
View(loc)
loc <- loc[1:51,:]
loc <- loc[1:51,]
write.table(loc, "loc.txt", row.names = FALSE, na = "", col.names = FALSE, sep = "\t")
