function [pk,vk]=krigingIndGauss(ck,ch,zh,covmodel,covparam,p,nhmax,dmax,options);% krigingIndGauss           - prediction using indicator kriging with Gaussian distribution (Jan 1,2001)%% Computation of the estimated values and estimation variances% using indicator kriging methods for a single variable assumed% to be zero-mean and bivariate Gaussian distributed.% This function is only for demonstration purpose, as simple kriging% should be used under the Gaussian assumption%% SYNTAX :%% [pk,vk]=krigingIndGauss(ck,ch,zh,covmodel,covparam,p,nhmax,dmax,options);%% INPUT :%% ck        nk by d      matrix of coordinates for the estimation locations.%                        A line corresponds to the vector of coordinates at%                        an estimation location, so the number of columns%                        corresponds to the dimension of the space. There is%                        no restriction on the dimension of the space.% ch        nh by d      matrix of coordinates for the hard data locations,%                        with the same convention as for ck.% zh        nh by 1      vector of values for the hard data at the coordinates%                        specified in ch.% covmodel  string       that contains the name of the covariance model that is%                        used for the estimation (see the MODELS directory).%                        Variogram models can not be used with this function.% covparam  1 by k       vector of values for the parameters of covmodel, according%                        to the convention for the corresponding covariance model.% p         1 by 1 or 2  cumulative distribution function value(s) for which the%                        indicator covariance function must be computed. If p is a%                        scalar, the function computes the indicator covariance%                        function for the probability of being lower than the Gaussian%                        quantile associated with the p value. If p is a 1 by 2 vector,%                        the function computes the indicator covariance function for%                        the probability of belonging to the interval defined by the%                        Gaussian quantiles associated with the values in p, where%                        0<p(1)<p(2)<1.% nhmax     scalar       maximum number of hard data values that are considered%                        for the estimation at the locations specified in ck.% dmax      scalar       maximum distance between an estimation location and%                        existing hard data locations. All hard data locations%                        separated by a distance smaller than dmax from an%                        estimation location will be included in the estimation%                        process for that location, whereas other hard data%                        locations are neglected.% options   scalar       optional parameter that can be used if the default value%                        is not satisfactory (otherwise it can simply be omitted%                        from the input list of variables). options(1) is taking%                        the value 1 or 0 if the user wants or does not want to%                        display the order number of the location which is%                        currently processed, respectively.%% OUTPUT :%% pk        nk by 1      vector of predicted cumulative probability values at the%                        coordinates specified in ck.% vk        nk by 1      vector of associated prediction variances.%%%%%% Initialize the parametersif nargin<9,  options(1)=0;end;nk=size(ck,1);           % nk is the number of estimation pointsif options(1)==1,  num2strnk=num2str(nk);end;pk=zeros(nk,1)*NaN;vk=zeros(nk,1)*NaN;K11=NaN;%%%%%% Main loop starts hereif length(p)==1,  zind=(zh<=gaussinv(p,[0,covparam(1)]));else  zind=(zh>gaussinv(p(1),[0,covparam(1)]))&&(zh<=gaussinv(p(2),[0,covparam(1)]));end;for i=1:nk,  ck0=ck(i,:);  [chlocal,zindlocal,dh,sumnhlocal]=neighbours(ck0,ch,zind,nhmax,dmax);  if sumnhlocal>0,                           % test if there is at least 1 data     D=coord2dist(chlocal,chlocal);           % build the distance matrix    d=coord2dist(chlocal,ck0);               % build the distance vector    K=model2indic(D,covmodel,covparam,p);     % build the left-hand side matrix    k=model2indic(d,covmodel,covparam,p);     % build the right-hand side vector    unit=ones(sumnhlocal,1);    Kadd=[[K,unit];[unit',0]];    kadd=[k;1];    lam=Kadd\kadd;                           % compute the kriging weights lam    lam=lam(1:sumnhlocal);    lamt=lam';    pk(i)=lamt*zindlocal;                    % compute the kriging estimate zk(i)    K11=K(1,1);    vk(i)=K11-2*lamt*k+lamt*K*lam;           % compute the kriging variance vk(i) for covariance  end;  if options(1)==1,    disp([num2str(i),'/',num2strnk]);  end;end;