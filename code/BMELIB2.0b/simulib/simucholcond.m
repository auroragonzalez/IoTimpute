function [Zh,L]=simucholcond(ch,ch0,zh0,covmodel,covparam,ns);% simucholcond              - conditional simulation by the Cholesky method (Jan 1,2001)%% Generate conditional simulations using the Choleski% decomposition method, as for simuchol.m. The conditioning% values are zero mean Gaussian distributed hard data.% Simulated values are Gaussian distributed. %% SYNTAX :%% [Zh,L]=simucholcond(ch,ch0,zh0,covmodel,covparam,ns);%% INPUT :%% ch         nh by d   matrix of coordinates for the locations%                      where hard data have to be simulated. A%                      line corresponds to the vector of coordinates%                      at a simulation location, so the number of%                      columns corresponds to the dimension of the%                      space. There is no restriction on the dimension%                      of the space.% ch0        nh0 by d  matrix of coordinates for the hard conditioning%                      values, with the same convention as for ch.% zh0        nh0 by 1  vector of the hard conditioning values at the%                      coordinates specified in ch0.% covmodel   string    string that contains the name of the covariance%                      model which is used for the simulation (see the%                      MODELS directory). Variogram models are not%                      available for this function.% covparam   1 by k    vector of values for the parameters of covmodel,%                      according to the convention for the corresponding%                      covariance model.% ns         scalar    number of sets of simulated values which are required.%                      If the optional ns variable is omitted from the input%                      list of variables, simuchol.m produces a single set%                      of simulated values.% % OUTPUT :%% Zh         nh by ns  matrix of simulated Gaussian distributed hard values at%                      the coordinates specified in ch. Each column corresponds%                      to a different simulation, so that if ns=1 or if ns is%                      omitted, Zh is a column vector of values. Each simulated%                      vector of values is statistically independant from the%                      others.% L          n by n    upper triangular matrix obtained from the Choleski%                      decomposition of the global covariance matrix C for%                      values at the ch coordinates, such that C=L'*L.%% NOTE :%% 1- When using simucholcond.m, the hard data values should be% zero mean Gaussian distributed. If this is not the case, the% mean should be substracted from the zh0 values prior to the% simulation, and appropriate transformations should be performed% (see other2gauss.m).%% 2- All the specific conventions for specifying nested models,% multivariate or space-time cases are the same as for kriging.m.%%%%% Error messageindex=iscell(ch);          % test if there is an index for the variablesif index==1,  nh=size(ch{1},1);        % nh is the number of simulation points  nindexh=length(ch{2});  if nindexh==1,    ch{2}=ch{2}*ones(nh,1);  end;end;index=findpairs(ch,ch0);if ~isempty(index),  error('ch and ch0 cannot contain identical coordinates');end;%%%%% Initialize the parametersif nargin<6,  ns=1;end;%%%%% Use the conditional distributions[K11]=coord2K(ch,ch,covmodel,covparam);[K22]=coord2K(ch0,ch0,covmodel,covparam);[K12]=coord2K(ch,ch0,covmodel,covparam);invK22=inv(K22);K12invK22=K12*invK22;K1if2=K11-K12invK22*K12';m1if2=K12invK22*zh0;L=chol(K1if2);Lt=L';n=size(Lt,1);Zh=zeros(n,ns);for i=1:ns,  Zh(:,i)=Lt*randn(n,1)+m1if2;end;