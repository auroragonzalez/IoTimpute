function stringplot(c,str,Property,Value);% stringplot                - plot of text strings at 2-D coordinates (Jan 1,2001)%% Plot arbitrary text strings at a set of two dimensional coordinates.%% SYNTAX :%% stringplot(c,str,Property,Value); %% INPUT :%% c           n by 2 matrix of coordinates for the locations to be displayed.%                    Each line corresponds to the vector of coordinates at a%                    location, so the number of columns is equal to two.% str         n by 1 cell array having as many cells as there are values in z.%                    Each cell is a string that contains the text that must be%                    displayed at the corresponding coordinates specified in c.% Property    1 by k cell array where each cell is a string that contains a legal name%                    of a text object property. This variable is optional, as default%                    values are used if Property is missing from the input list of variables.%                    Execute get(H), where H is a text handle, to see a list of text object%                    properties and their current values. Execute set(H) to see a list of%                    text object properties and legal property values. See also the help%                    for text.m.% Value       1 by k cell array where each cell is a legal value for the corresponding text%                    object property as specified in Property.%% NOTE :%% For example,%% stringplot(c,str,Property,Value);%% where Property={'FontSize','Color'};%       Value={30,[1 0 0]};%% will display the text with FontSize=30 and Color=[1 0 0].% By default, stringplot(c,str) will use the default properties% used by text.m.if nargin>2,  if ~iscell(Property),    Property={Property};    Value={Value};    noptions=1;  else    noptions=length(Property);  end;else  noptions=0;end;n=length(str);for i=1:n,   a=text(c(i,1),c(i,2),str{i});   for j=1:noptions,     set(a,Property{j},Value{j});   end;end;