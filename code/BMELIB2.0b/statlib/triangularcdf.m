function [p]=triangularcdf(z,param);% triangularcdf             - triangular cumulative distribution function (Jan 1,2001)%% Compute the values of the cumulative distribution% function for a triangular distribution with specified% lower bound, upper bound and mode parameters.%% SYNTAX :%% [p]=triangularcdf(z,param);%% INPUT :%% z        n by k   matrix of values for which the probability%                   distribution function must be computed.% param    1 by 3   parameters of the triangular distribution, where :%                   param(1) is the lower bound of the distribution,%                   param(2) is the upper bound of the distribution,%                   param(3) is the mode of the distribution,%                   where param(1)<=param(3)<=param(2).%% OUTPUT :%% p        n by k   matrix of values for the cumulative probabilities%                   computed at the corresponding z values.a=param(1);b=param(2);c=param(3);isvalid=((a<=b)&(c>=a)&(c<=b));if isvalid==0,  error('parameters are not valid');end;if (a==b)&(a==c),  p=zeros(size(z));  index=find(z>=a);  p(index)=1;  return;end;if (a~=c)&(b~=c),  cond1=(z>=a)&(z<c);  cond2=(z<=b)&(z>=c);  cond3=(z>b);  p1=((z-a).^2)/((b-a)*(c-a));  p2=1-((b-z).^2)/((b-a)*(b-c));  p=cond1.*p1+cond2.*p2+cond3;else  if a==c,                       %%% degenerate case : mode is lower bound    cond1=(z>=a)&(z<=b);    cond3=(z>b);    p=1-((b-z).^2)/((b-a).^2);    p=cond1.*p+cond3;  end;  if b==c,                       %%% degenerate case : mode is upper bound    cond1=(z>=a)&(z<=b);    cond3=(z>b);    p=((z-a).^2)/((b-a).^2);    p=cond1.*p+cond3;  end;end;